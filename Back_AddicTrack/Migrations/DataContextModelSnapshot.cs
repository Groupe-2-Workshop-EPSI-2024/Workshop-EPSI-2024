// <auto-generated />
using System;
using Back_AddicTrack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Back_AddicTrack.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Back_AddicTrack.Models.Addiction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("HealthProfessionalId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("SobrietyStartDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("HealthProfessionalId");

                    b.HasIndex("PatientId");

                    b.ToTable("Addictions");
                });

            modelBuilder.Entity("Back_AddicTrack.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Back_AddicTrack.Models.HealthProfessional", b =>
                {
                    b.HasBaseType("Back_AddicTrack.Models.User");

                    b.HasDiscriminator().HasValue("HealthProfessional");
                });

            modelBuilder.Entity("Back_AddicTrack.Models.Patient", b =>
                {
                    b.HasBaseType("Back_AddicTrack.Models.User");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Patient");
                });

            modelBuilder.Entity("Back_AddicTrack.Models.Addiction", b =>
                {
                    b.HasOne("Back_AddicTrack.Models.HealthProfessional", "HealthProfessional")
                        .WithMany()
                        .HasForeignKey("HealthProfessionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Back_AddicTrack.Models.Patient", null)
                        .WithMany("Addictions")
                        .HasForeignKey("PatientId");

                    b.Navigation("HealthProfessional");
                });

            modelBuilder.Entity("Back_AddicTrack.Models.Patient", b =>
                {
                    b.Navigation("Addictions");
                });
#pragma warning restore 612, 618
        }
    }
}
